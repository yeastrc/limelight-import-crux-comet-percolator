/*
    Build executable jar file with gradle shadowJar
    More info at: https://imperceptiblethoughts.com/shadow/
    
    Requires Gradle 5+
 */

plugins {
 	id 'com.github.johnrengelman.shadow' version '8.1.1'
	id 'org.ajoberstar.grgit' version '4.1.1'
}

apply plugin: 'java'
apply plugin: 'com.github.johnrengelman.shadow'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()

    maven {
        url 'https://raw.github.com/yeastrc/pepxml-parsing-jaxb-libs/repository/'
    }
    maven {
        url 'https://raw.github.com/yeastrc/java-fasta-utils/repository/'
    }
    maven {
        url 'https://raw.github.com/yeastrc/limelight-import-api/repository/'
    }
    maven {
        url 'https://raw.github.com/yeastrc/percolator-utils/repository/'
    }
}

//  Set default task for this build.gradle file
defaultTasks 'shadowJar'

dependencies {
    implementation 'org.yeastrc:yrc-fasta-utils:2.0.2'
    implementation 'org.yeastrc:limelight-import-api:0.12.0'
    implementation 'info.picocli:picocli:4.7.7'
    implementation 'org.yeastrc:yrc-pepxml-jaxb:1.22.2'
    implementation 'org.yeastrc:yrc-percolator-utils:1.0.0'
    implementation 'commons-io:commons-io:2.6'

    // JAXB dependencies (Required for Java 11+)
    // https://mvnrepository.com/artifact/jakarta.xml.bind/jakarta.xml.bind-api
    implementation group: 'jakarta.xml.bind', name: 'jakarta.xml.bind-api', version: '2.3.2'
    // https://mvnrepository.com/artifact/org.glassfish.jaxb/jaxb-runtime
    implementation group: 'org.glassfish.jaxb', name: 'jaxb-runtime', version: '2.3.2'

}

//  NOT NEEDED:  files from 'src/main/resources' copied to resulting jar without this.

//  For creating runnable jar
//  processResources {
//    from ('src/main/resources') {
//        include '**/*'
//    }
// }


def limelightRelease_EnvironmentVariableName = 'LIMELIGHT_RELEASE_TAG' //  Environment variable used

def limelightRelease_EnvironmentVariableValue = System.getenv(limelightRelease_EnvironmentVariableName)

def limelightRelease_EnvironmentVariableValue_DefaultValue = ''

def limelightRelease_EnvironmentVariableValue_OrDefault = limelightRelease_EnvironmentVariableValue ?: limelightRelease_EnvironmentVariableValue_DefaultValue // Fallback if env var is not set
  	
println("Environment Variable value 'LIMELIGHT_RELEASE_TAG': " + limelightRelease_EnvironmentVariableValue )

println("Environment Variable value 'LIMELIGHT_RELEASE_TAG' or Default: " + limelightRelease_EnvironmentVariableValue_OrDefault )
	
//  Assign to grgit, created by plugin
def gitRepo = grgit


// def gitRepo = Grgit.open({
//  dir = ".."  //  Use parent directory since that is root of GIT repo
//  currentDir = <path>
//  credentials = <credentals>
// })

def gitHeadId = gitRepo.head().id
def gitCommit = gitRepo.head().getAbbreviatedId(8)
def gitBranch = gitRepo.branch.getCurrent().getName()

//  Get tag at GIT HEAD: like git tag --points-at HEAD
def repoHead = gitRepo.head()
def repoHeadTag = gitRepo.tag.list().find {
	it.commit == repoHead
}
def repoTagName = "NO GIT Tag at HEAD"

if ( repoHeadTag ) {
	println("GIT Tag at HEAD found")
	repoTagName = repoHeadTag.getName()
}


println("gitHeadId: " + gitHeadId )
println("gitCommit: " + gitCommit )
println("gitBranch: " + gitBranch )
println("GIT Tag at HEAD: " + repoTagName )


//  The filename 'limelight_version_from_build.properties' 
//     is also in Java code org.yeastrc.

new File("$projectDir/src/main/resources/limelight_version_from_build.properties").text = """

#  Generated by the build

LIMELIGHT_RELEASE_TAG=${limelightRelease_EnvironmentVariableValue_OrDefault}

Project-Title=${project.name}
Branch=$gitBranch
GIT-HASH=${gitCommit}
GIT-Full-HASH=${gitHeadId}
GIT-Repo-Tag-Name=${repoTagName}
Buildtime=${new Date().format("yyyy-MM-dd HH:mm:ssZ")}
"""
	

jar {
    manifest {
        attributes([ 'Main-Class': 'org.yeastrc.limelight.xml.crux_comet_percolator.main.MainProgram',
               		"Multi-Release": true,
        			'Project-Title': project.name,
					'Build-Timestamp': new Date().format("yyyy-MM-dd HH:mm:ssZ"),
					'Git-Commit': gitCommit,
					'GIT-Full-HASH': gitHeadId,
					'GIT-Tag-at-HEAD': repoTagName,
					'Git-Branch': gitBranch,
					'LIMELIGHT_RELEASE_TAG': limelightRelease_EnvironmentVariableValue_OrDefault ] )
    }
}

//   https://imperceptiblethoughts.com/shadow/configuration/#configuring-output-name

shadowJar {

    archiveBaseName = 'cruxCometPercolator2LimelightXML'
    
    // Required to output same as previous filename. 
    //		Default is 'all' which will add '-all' to output filename before '.jar'
    
    archiveClassifier = '' 
    
    //  Default is empty string 
    archiveVersion = ''
}

